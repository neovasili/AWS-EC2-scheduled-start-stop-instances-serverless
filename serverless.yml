service: aws-python3

plugins:
  - serverless-pseudo-parameters

provider:
  name: aws
  runtime: python3.7
  stage: ${ opt:stage, 'dev' }
  region: ${ opt:region, 'eu-west-1' }
  
  environment:
    stage: ${ self:provider.stage }
    default_region: ${ self:provider.region }
    default_timezone: Europe/Madrid
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "lambda:InvokeFunction"
      Resource: 
        - arn:aws:lambda:${ self:provider.region }:#{ AWS::AccountId }:function:aws-python3-${ self:provider.stage }-stop-instances
        - arn:aws:lambda:${ self:provider.region }:#{ AWS::AccountId }:function:aws-python3-${ self:provider.stage }-start-instances
    - Effect: "Allow"
      Action: 
        - "ec2:DescribeInstances"
        - "ec2:DescribeRegions"
      Resource: "*"
    - Effect: "Allow"
      Action: 
        - "ec2:StartInstances"
        - "ec2:StopInstances"
      Resource: arn:aws:ec2:*:*:instance/*

functions:
  get-instances-to-operate:
    handler: functions/account-management/get-instances-to-operate.handler
    environment:
      stop_instances_function_name: aws-python3-${ self:provider.stage }-stop-instances
      start_instances_function_name: aws-python3-${ self:provider.stage }-start-instances
    timeout: 15
    events:
      - schedule: rate(30 minutes)
  start-instances:
    handler: functions/instances-management/start-instances.handler
  stop-instances:
    handler: functions/instances-management/stop-instances.handler


